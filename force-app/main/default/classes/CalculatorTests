/**
 * This class contains unit tests for validating the behavior of Apex classes
 * and triggers.
 *
 * Unit tests are class methods that verify whether a particular piece
 * of code is working properly. Unit test methods take no arguments,
 * commit no data to the database, and are flagged with the testMethod
 * keyword in the method definition.
 *
 * All test methods in an org are executed whenever Apex code is deployed
 * to a production org to confirm correctness, ensure code
 * coverage, and prevent regressions. All Apex classes are
 * required to have at least 75% code coverage in order to be deployed
 * to a production org. In addition, all triggers must have some code coverage.
 * 
 * The @isTest class annotation indicates this class only contains test
 * methods. Classes defined with the @isTest annotation do not count against
 * the org size limit for all Apex scripts.
 *
 * See the Apex Language Reference for more information about Testing and Code Coverage.
 */
@isTest
private class CalculatorTests {

    @isTest
    static void testDivideByZero() {
        // TO DO: implement unit test
        
        try{
        Test.startTest();
        Decimal result;
            result = Calculator.divide(2, 0);
            Test.stopTest();
          Assert.fail('You can not divide by zero');
          //System.assertEquals(result,'You can not divide by zero');
        }catch(Exception e){
            System.debug(e.getMessage());
            System.assertEquals(e.getMessage(),'You still can\'t divide by zero');
        }
        
    }
    @Istest
    static void testAdd(){

        Test.startTest();
        Decimal result = Calculator.add(2,2);
        Test.stopTest();
        System.assertEquals(4, result, 'The result should be 4');
    }
    @Istest 
     static void testSubtract(){

        Test.startTest();
        Decimal result = Calculator.subtract(4,2);
        Test.stopTest();
        System.assertEquals(2, result, 'The result should be 2');
     }
     @Istest
      static void testMultiply(){

        Test.startTest();
        Decimal result = Calculator.multiply(4,2);
        Test.stopTest();
        System.AssertEquals(8, result, '     The result should be 8');
     }
     @Istest
      static void testDivide(){

        Test.startTest();
            Decimal result = Calculator.divide(4,2);
            Test.stopTest();
      }
}
